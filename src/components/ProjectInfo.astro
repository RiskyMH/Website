---
import DiscordIcon from "./DiscordIcon.svg";
import ExternalIcon from "./ExternalIcon.svg";
import GitHubIcon from "./GitHubIcon.svg";
import LinkButton from "./LinkButton.astro";

interface Props {
	name: string;
	icon?: string;
	Icon?: any;
	links: {
		url: string;
		type: "website" | "discord" | "github" | "discord-bot-invite";
		disabled?: string;
	}[];
	description: string;
	iconCircle?: boolean;
}
const { name, icon, Icon, links, description, iconCircle } = Astro.props;

const linkConfig = {
	website: {
		Component: LinkButton,
		text: "Website",
		Icon: ExternalIcon,
	},
	discord: {
		Component: LinkButton,
		text: "Discord",
		Icon: DiscordIcon,
	},
	"discord-bot-invite": {
		Component: LinkButton,
		text: "Invite Bot",
		Icon: DiscordIcon,
	},
	github: {
		Component: LinkButton,
		text: "GitHub",
		Icon: GitHubIcon,
	},
};
---

<div
	class="flex h-dvh w-full snap-center items-center justify-center sm:snap-align-none md:h-auto"
>
	<div
		class="flex flex-col items-center rounded-md bg-[#2a2a2a] p-4 shadow-md md:flex-row md:p-6 gap-2 sm:gap-5"
	>
		{
			Icon ? (
				<>
					<Icon
						class={`${iconCircle ? "rounded-full" : "rounded-lg"} w-24 h-24 bg-[#3a3a3a]`}
						alt={`${name}'s icon`}
					/>
					<img loading="lazy" class="hidden" src={icon} alt={`${name}'s icon`} />
				</>
			) : (
				<img
					loading="lazy"
					class={`${iconCircle ? "rounded-full" : "rounded-lg"} w-24 h-24 bg-[#3a3a3a]`}
					src={icon}
					alt={`${name}'s icon`}
				/>
			)
		}

		<div class="flex flex-col gap-4">
			<div class="text-center md:text-left">
				<h3 class="text-2xl font-bold leading-9">{name}</h3>
				<p class="text-[#A6A6A6] md:w-[26rem]">{description}</p>
			</div>

			<div class="flex flex-row justify-center md:justify-normal gap-2">
				{
					links.map((link) => {
						const { Component, Icon, text } = linkConfig[link.type];

						if (!Component) {
							return null;
						}

						return (
							<Component
								url={link.url}
								disabled={link.disabled}
								text={link.disabled || text}
								Icon={Icon}
								newTab={!link.disabled}
								noMobile
							/>
						);
					})
				}
			</div>
		</div>
	</div>
</div>
